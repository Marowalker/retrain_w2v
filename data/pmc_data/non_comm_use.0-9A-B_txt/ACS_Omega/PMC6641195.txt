
==== Front
ACS OmegaACS OmegaaoacsodfACS Omega2470-1343American Chemical Society 3145762910.1021/acsomega.7b00384ArticleOn the Importance of Choosing
the Best Minimization
Algorithm for the Determination of Ternary Diffusion Coefficients
by the Taylor Dispersion Method Russo Vincenzo Ortona Ornella Tesser Riccardo Paduano Luigi Di Serio Martino *Chemical Sciences Department, University of Naples “Federico II”, IT-80126 Naples, Italy* E-mail: diserio@unina.it (M.D.S.).23 06 2017 30 06 2017 2 6 2945 2952 30 03 2017 12 06 2017 Copyright © 2017 American Chemical Society2017American Chemical SocietyThis is an open access article published under an ACS AuthorChoice License, which permits copying and redistribution of the article or any adaptations for non-commercial purposes.

Taylor dispersion
method is a common technique for the determination
of diffusion coefficients in the case of multicomponent systems. One
of the main problems related to the parameter estimation analysis
of the collected results is the choice of the best minimization algorithm
that allows finding the real minimum of the objective function. Usually,
researchers use the Levenberg–Marquardt algorithm, averaging
the parameters obtained by different estimation analyses. In this
paper, some nonlinear minimization algorithms included in MATLAB R2016a
have been tested, and the results are compared in terms of best fit
on the experimental data collected for sodium dodecyl sulfate (SDS)
+ sodium octanoate (SOC) + water system.

document-id-old-9ao7b00384document-id-new-14ao-2017-00384nccc-price
==== Body
1 Introduction
The
determination of mutual diffusion coefficients by the Taylor
dispersion method1 for multicomponent systems
is a milestone technique for both physical chemistry and chemical
engineering problems in that the related experimental setup is relatively
easy to build and the parameters obtained are realistic and comparable
with those obtained from more sophisticated techniques.2 Actually, a stream of a multicomponent solution
at a fixed average composition is pumped into a long narrow pipe.
It reaches a differential detector. If a pulse of the same multicomponent
solution but with a slightly different composition is injected into
the pipe and reaches the detector, the system “reads”
the refractive index (RI) difference between the stream and the pulse,
which gives rise to a concentration profile along the time represented
by the superimposition of two or more broadened Gaussian peaks.

In this work, the collected experimental data are then elaborated
with a sophisticated model, which is a general mass balance for a
fully developed laminar model.

For a two-component system diffusing
in a solvent, the mass balance
can be written as in eqs 1 and 2.3 1   2  

Here, the accumulation term
is considered to be equal to the convection
term and to the sum of two different contributions related to both
axial and radial dispersion, whose coefficients are, respectively,
the axial dispersion coefficient (DZ) and the mutual diffusivities (Dij). By considering that the presented model demands
the solution of partial differential equations, a good knowledge of
both computer programming and mathematics is needed. For this reason,
the necessity to write an analytical solution was of significance.
In 1988, Price3 demonstrated that it is
possible to write a correct analytical solution by assuming a negligible
axial dispersion contribution, the assumption being generally valid
for systems where eq 3 is satisfied. 3  This relationship is validated by using very
long and narrow pipes and thus with a small inner radius value (R) and a high pipe length (Z), by imposing
a small fluid velocity (u). In this way, the model
can be written as in eq 4. 4  

Starting from eq 4,
it is possible to calculate the RI profile along the time equation
following the procedure reported in Annex,4 obtaining eqs 5 and 6. 5   6  D1 and D2 represent the eigenvalues
of the function,
while W1 is the weight of the first peak
function. As can be seen, the eigenvalues are weighted through a linear
correlation, and a and b are the
related parameters.

The four parameters, D1, D2, a, and b, must be
obtained by parameter estimation analysis of the collected experimental
data. Once the parameter estimation is concluded, it is possible to
calculate the mutual diffusion coefficients as in eqs 7–10. 7   8   9   10  

Nowadays, this analysis is normally performed
by averaging the
results obtained by fitting 2–4 experimental outputs obtained
with different α1 values. In both cases, traditional
least-square methods, such as the well-known Levenberg–Marquardt
algorithm,5 are normally adopted to find
the minimum of the objective function.6−12 Even if the effect of using local versus global solvers in parameter
estimation analysis is a well-known topic for several kinds of applications,13−20 no specific studies are present in the literature that deal with
the choice of the best minimization algorithm, which could give place
to the determination of the real global minimum of the objective function
with a single-parameter estimation analysis on multiple experimental
datasets, for diffusivity measurements obtained by the Taylor dispersion
method. For this reason, in this work, we have chosen a specific experimental
system and performed Taylor measurements. In particular, sodium dodecyl
sulfate (SDS) + sodium octanoate (SOC) mutual diffusion experiments
have been performed in water. The collected data have been simultaneously
submitted for parameter estimation analysis by using different minimization
algorithms that are included in MATLAB R2016a. The results are compared
with the ones reported in the literature.21

2 Materials and Methods
2.1 Materials
SDS and SOC have been supplied
by Sigma-Aldrich at the highest purity available.

2.2 Methods
Taylor dispersion experiments
have been performed in a classical lab-scale equipment, well-described
in many papers.1−6 It is constituted by a peristaltic pump that flows a solution of
SDS(1) + SOC(2) + water (C̅1 = C̅2 = 25 mol·m–3) at a fixed flow rate to a 20 m length capillary pipe that is characterized
by an internal radius of R = 3.945 × 10–4 m. The pipe is set in a thermostatic bath working
at 25 °C. The outlet flow is sent to an RI Detector (K006Eauer
RI Detector K-2301) with a sensitivity of 3 × 10–8 RIU with a noise of ±1.5 × 10–8 RIU.
A pulse of 70 μL of a solution with different SDS or SOC concentration
is sent to the system by a high-performance liquid chromatography
injector. The response is analyzed by the above-mentioned detector.
The experimental data are acquired continuously, with a frequency
of 1 sample/s, by an RS232 port. The data acquisition software is
written in LabVIEW 2011. The experimental data collected for the SDS
+ SOC + water system are reported in the Supporting Information. For reading purposes, data are reported with a
frequency of 1 sample every 20 s. Data are normalized, and the baseline
is subtracted.

For the parameter estimation analysis, the objective
function has been built in all of the tested cases as in eq 11. 11  

All calculations have been performed
by fixing a function tolerance
of 1 × 10–14, which means that iterations end
when the relative change in the best objective function value over
the last iterations is less than the function tolerance value. It
is well-known that deterministic algorithms involve the calculation
of a single objective function value at each iteration, whereas evolutive
algorithms are characterized by an entire population of values. To
compare both classes, we decided to report the best f(x) values for the evolutive algorithms.

3 Results and Discussion
A list of all of the collected
experiments, together with the details
of the adopted experimental conditions is reported in Table 1, and the obtained profiles
are reported in Figure 1. The experimental data reported in Figure 1 have been reduced in number for reading
purposes.

Figure 1 Normalized RI signals for all collected experimental data. Symbols
are the experimental points, reduced for reading reasons, and lines
are the calculated values [f(x)
= 0.010322].

Table 1 List of
the Performed Experiments
with the Related Experimental Conditions Details
test	C̅1 [mol·m–3]	C̅2 [mol·m–3]	ΔC1 [mol·m–3]	ΔC2 [mol·m–3]	α1 [—]	
1	25	25	11.3	0.785	0.96	
2	25	25	0.209	10.1	0.03	
3	25	25	0.209	10.1	0.03	
4	25	25	–0.05	–9.64	0.01	
5	25	25	–0.05	–9.64	0.01	
6	25	25	11.3	0.785	0.96	
7	25	25	11.3	0.785	0.96	
8	25	25	10.0	–9.76	2.46	
9	25	25	10.0	–9.76	2.46	
As can be seen, a good
range of α1 has been investigated,
to reduce the correlation between the parameters to be estimated.
The evaluation of the R2/R1 ratio has been performed by measuring the area of the
obtained peak functions for the experiments with α1 = 0 and 1, obtaining R2/R1 = 0.6094 ± 0.0317. In this way, the only parameters
to be fitted are D1, D2, a, and b. For this
purpose, different classes of minimization algorithms have been tested
and compared with the collected experimental data. More than 10 starting
points have been used for each case; however, only the parameter intervals
that gave the final parameters with the physical meaning have been
reported in the paper (the completed list of the obtained results
has been reported in the Supporting Information).

The first two algorithms that have been tested are the trust-region-reflective
(TRR) and Levenberg–Marquardt (LM) algorithms, both included
in the MATLAB function called lsqnonlin. In particular, the TRR algorithm
is based on the interior-reflective Newton method, as reported in
refs (22) and (23). Each iteration involves
the approximate solution of a large linear system using the preconditioned
conjugate gradients (PCG) method.24 The
LM algorithm uses, instead, a search direction that is a cross between
the Gauss–Newton direction and the steepest descent direction.24−27 The main operative difference of the two algorithms is that the
LM algorithm does not allow the use of constraints on the parameters
to be estimated. The algorithms have been tested by using two different
starting points. The parameter estimation settings and the obtained
results are reported in Table 2, where both the parameters, 95% confidence intervals, and
the objective function values are listed.

Table 2 Parameters
Obtained by Using the TRR
and LM Algorithmsa
 	TRR	LM	
starting points	0.1 × 10–9, 1 × 10–9,
−1, 0.5	0.1 × 10–9, 0.8 × 10–9, −0.3, 1.2	0.1 × 10–9, 1 × 10–9,
−1, 0.5	0.1 × 10–9, 0.8 × 10–9, −0.3, 1.2	
lower
bounds	1 × 10–10, 1 × 10–10, −0.5, 1	 	
upper
bounds	1 × 10–8, 1 × 10–8, −0.2, 2	 	
D1, m2·s–1	1.72 × 10–10 ± 8.66 × 10–13	0.98 × 10–10 ± 3.94 × 10–11	1.73 × 10–10 ± 8.71 × 10–13	0.95 × 10–10 ± 3.85 × 10–11	
D2, m2·s–1	7.64 × 10–10 ± 4.17 × 10–11	6.99 × 10–10 ± 1.44 × 10–10	7.65 × 10–10 ± 4.21 × 10–11	6.89 × 10–10 ± 1.38 × 10–10	
a, —	–0.40 ± 0.008	–0.3 ± 0.03	–0.41 ± 0.008	–0.3 ± 0.04	
b, —	1.34 ± 0.005	1.2 ± 0.02	1.36 ± 0.005	1.3 ± 0.03	
D11, m2·s–1	0.18 × 10–9 ± 4.05 × 10–12	0.12 × 10–9 ± 5.08 × 10–11	0.17 × 10–9 ± 4.08 × 10–12	0.13 × 10–9 ± 5.03 × 10–11	
D12, m2·s–1	0.15 × 10–9 ± 1.51 × 10–11	0.12 × 10–9 ± 5.16 × 10–11	0.15 × 10–9 ± 1.48 × 10–11	0.12 × 10–9 ± 5.21 × 10–11	
D21, m2·s–1	0.04 × 10–9 ± 1.12 × 10–11	0.07 × 10–9 ± 5.54 × 10–11	0.06 × 10–9 ± 1.08 × 10–11	0.08 × 10–9 ± 5.61 × 10–11	
D22, m2·s–1	0.75 × 10–9 ± 4.36 × 10–11	0.68 × 10–9 ± 1.51 × 10–10	0.78 × 10–9 ± 4.45 × 10–11	0.68 × 10–9 ± 1.48 × 10–10	
f(x)	0.7977	10.9371	0.7987	10.9217	
a Starting point parameters and constraint
values refer to the estimated parameters listed in the following order: D1, D2, a, and b.

As can be seen, even if the two algorithms give similar results, they fall into suboptimal
local minima in both cases, the estimated Dij being completely different from the ones reported
by Leaist and MacEwan21 (see Table 3). What we can conclude is that
a single estimation analysis of the fitting parameters is not enough
to obtain good results. For both the TRR and the LM approaches, the
constraints must be tightened around the solution that gives place
to the best data fit. This fact demands a lot of trial and error work.
For this reason, no further tests have been performed on these algorithms.

Table 3 Parameters Estimated by Leaist and
MacEwan21 for the Same Mean Concentrations
of the Same System Investigated in this work
 	value	
D11, m2·s–1	0.17 × 10–9	
D12, m2·s–1	0.15 × 10–9	
D21, m2·s–1	0.08 × 10–9	
D22, m2·s–1	0.76 × 10–9	
The “patternsearch”
(PS) MATLAB function has also
been tested. By default, PS looks for a minimum based on an adaptive
mesh in the parameter space.28 In this
work, both the lower and upper bounds have been fixed, whereas the
starting-point influence of the parameter estimation analysis has
been investigated. Four cases have been fixed, labeling them dependently
on how far the initial point is from the values reported in the literature,
as shown in Table 4.

Table 4 Parameters Obtained by Using PS Algorithma
 	case 1—very near	case 2—near	case 3—far	case 4—very far	
lower bounds	1 × 10–11, 1 × 10–11, −5, 0	
upper bounds	1 × 10–8, 1 × 10–8, 0, 5	
starting points	0.1 × 10–9, 0.8 × 10–9, −0.3, 1.2	0.1 × 10–9, 1 × 10–9,
−0.5, 1	0.1 × 10–9, 1 × 10–9,
−1, 0.5	0.5 × 10–9, 1 × 10–9,
−0.5, 0.5	
D1, m2·s–1	1.50 × 10–10 ± 3.64 × 10–12	1.50 × 10–10 ± 3.64 × 10–12	1.00 × 10–10 ± 1.21 × 10–10	5.00 × 10–10 ± 2.94 × 10–10	
D2, m2·s–1	7.79 × 10–10 ± 2.79 × 10–11	7.79 × 10–10 ± 2.79 × 10–11	1.00 × 10–9 ± 1.02 × 10–10	1.00 × 10–9 ± 2.81 × 10–10	
a, —	–0.36 ± 0.005	–0.36 ± 0.005	–0.008 ± 0.0127	–1.35 ± 0.16	
b, —	1.25 ± 0.003	1.25 ± 0.003	0.84 ± 0.008	3.09 ± 0.11	
D11, m2·s–1	0.17 × 10–9 ± 6.25 × 10–12	0.17 × 10–9 ± 6.25 × 10–12	0.10 × 10–9 ± 1.23 × 10–10	0.34 × 10–9 ± 5.16 × 10–10	
D12, m2·s–1	0.15 × 10–9 ± 1.06 × 10–11	0.15 × 10–9 ± 1.06 × 10–11	0.05 × 10–9 ± 9.67 × 10–12	0.31 × 10–9 ± 4.27 × 10–10	
D21, m2·s–1	0.08 × 10–9 ± 9.64 × 10–12	0.08 × 10–9 ± 9.64 × 10–12	0.24 × 10–9 ± 8.57 × 10–11	–0.35 × 10–9 ± 5.67 × 10–10	
D22, m2·s–1	0.76 × 10–9 ± 2.90 × 10–11	0.76 × 10–9 ± 2.90 × 10–11	0.99 × 10–9 ± 1.05 × 10–10	0.12 × 10–9 ± 5.02 × 10–10	
f(x)	0.010322	0.010322	0.031222	0.11843	
a Starting point parameters and constraint
values refer to the estimated parameters listed in the following order: D1, D2, a, and b.

As can be seen, cases 1 and 2 give the same results, finding the
real minimum, giving place to a good fit of the collected experimental
data (see Figure 1)
and the same parameters as reported in the literature (see Table 3). By observing the
best f(x) trend along the iteration
number for four of the mentioned cases, cases 1 and 2 are the fastest
to reach the real minimum. In fact, only 2 iterations are needed.
The obtained parameters are not correlated, as can be seen from Table 5, demonstrating that
the parameters are consistent.

Table 5 Correlation Matrix
Obtained by Using
PS Algorithm (Case 2)
 	D1	D2	a	b	
D1	1	 	 	 	
D2	0.49	1	 	 	
a	–0.70	–0.33	1	 	
b	0.78	0.39	–0.94	1	
From Table 4, it
is possible to observe a difference in the objective function between
0.01 and 0.03 for cases 2 and 3. Even if small, this variation is
significant for this kind of data fit. In fact, as can be seen from
the Supporting Information, cases 2 and
3 lead to very different results in data fit, overall near to the
baseline. From the obtained results, it is possible to conclude that
the PS algorithm is a good solution for the parameter estimation analysis
for the investigated topic. A real global minimum can be found within
small iteration numbers.

Finally, two nature-inspired evolutive
algorithms have been chosen
and tested from the MATLAB libraries, the genetic algorithm (“ga”
MATLAB function), GA, and the particle swarm (“particleswarm”
MATLAB function), PSW. GA works by creating a random initial population.
At each step, the algorithm selects the individuals in the current
generation to create the next population on the basis of the values
of the objective function. Of course, only the best individuals are
chosen and a new population is built around this elite. Further details
can be found in the literature.24,29 PSW algorithm works
in a different way. This algorithm begins the estimation analysis
by creating the initial particles and assigning them initial velocities.
Once the lowest function value and the best locations are determined,
the algorithm chooses new velocities and iteratively updates the particle
locations, velocities, and neighbors of the best locations. Also,
in this case, all details can be found in the MATLAB help and references
within.24 Both algorithms do not need a
starting point.

In the case of the GA algorithm, the influence
of different settings
such as the parameter range and population size has been investigated.
The results are reported in Table 6.

Table 6 Parameters Obtained by Using GA Algorithma
 	case 1	case 2	case 3	case 4	case 5	
lower bounds	1 × 10–11, 1 × 10–11, −5, 0	1 × 10–11, 1 × 10–11, −5, −5	
upper bounds	1 × 10–8, 1 × 10–8, 0, 5	1 × 10–8, 1 × 10–8,
5, 5	
population size	100 000	10 000	1000	100	100 000	
D1, m2·s–1	1.48 × 10–10 ± 6.88 × 10–12	1.69 × 10–10 ± 1.80 × 10–11	1.37 × 10–10 ± 2.75 × 10–11	2.37 × 10–10 ± 4.48 × 10–10	1.55 × 10–10 ± 1.02 × 10–12	
D2, m2·s–1	7.79 × 10–10 ± 2.71 × 10–11	7.01 × 10–10 ± 5.42 × 10–11	8.82 × 10–10 ± 3.44 × 10–11	1.93 × 10–9 ± 4.34 × 10–10	7.57 × 10–10 ± 2.47 × 10–11	
a, —	–0.33 ± 0.005	–0.56 ± 0.007	–0.190 ± 0.006	–3.57 × 10–12 ± 0.06	–0.41 ± 0.005	
b,
—	1.22 ± 0.003	1.48 ± 0.005	1.07 ± 0.004	0.98 ± 0.05	1.30 ± 0.003	
D11, m2·s–1	0.17 × 10–9 ± 9.31 × 10–12	0.19 × 10–9 ± 2.18 × 10–11	0.15 × 10–9 ± 2.69 × 10–11	0.24 × 10–9 ± 4.50 × 10–10	0.17 × 10–9 ± 3.64 × 10–12	
D12, m2·s–1	0.14 × 10–9 ± 1.05 × 10–11	0.19 × 10–9 ± 3.01 × 10–11	0.10 × 10–9 ± 1.21 × 10–11	0.38 × 10–22 ± 6.25 × 10–11	0.16 × 10–9 ± 9.85 × 10–12	
D21, m2·s–1	0.09 × 10–9 ± 1.05 × 10–11	0.04 × 10–9 ± 1.21 × 10–11	0.12 × 10–9 ± 1.96 × 10–11	0.06 × 10–9 ± 3.14 × 10–10	0.07 × 10–9 ± 8.18 × 10–12	
D22,m2·s–1	0.77 × 10–9 ± 2.83 × 10–11	0.68 × 10–9 ± 5.58 × 10–11	0.87 × 10–9 ± 3.62 × 10–11	0.19 × 10–9 ± 4.36 × 10–10	0.74 × 10–9 ± 2.58 × 10–11	
f(x)	0.010440	0.01322	0.01404	0.1078	0.01054	
a Constraint values refer to the estimated
parameters listed in the following order: D1, D2, a, and b. Stall limit generation fixed to 25; maximum number of
generations fixed to 1000.

As can be seen, the influence of the population size has been investigated
in cases 1–4. By increasing the population size, a decrease
in the objective function can be observed. This fact leads to parameters
that are closer, but not the same, to the very trustable ones reported
in the literature. By comparing the results obtained with the PS and
GA algorithms, it is evident that PS leads to a lower objective function.
Moreover, PS needs a smaller iteration number to achieve better results
than GA (see Figures 2 and 3). Finally, from Table 6, it is possible to see that by increasing
the parameter constraints, GA finds a different minimum. This fact
could lead to the determination of wrong Dij values.

Figure 2 or all four cases analyzed using the PS algorithm, f(x) trend along the iteration number plot.
Profiles
of cases 1 and 2 are overlapped.

Figure 3 For all five cases analyzed using the GA algorithm, f(x) trend along the iteration number plot.

The second tested nature-based
algorithm is the PSW. In this case,
both the swarm size and the reproducibility of this algorithm have
been tested. The results are reported in Table 7 and Figure 4.

Figure 4 For all cases analyzed using the PSW algorithm, f(x) trend along the iteration number plot.
(A) Swarm
size of 40 and (B) swarm size of 1000.

Table 7 Parameters Obtained by Using PSW Algorithma
 	cases 1–4	case 5–8	
lower bounds	1 × 10–11, 1 × 10–11, −5, −5	
upper bounds	1 × 10–8, 1 × 10–8, 5, 5	
swarm size	40	1000	
D1, m2·s–1	1.50 × 10–10 ± 3.64 × 10–12	1.50 × 10–10 ± 3.64 × 10–12	
D2, m2·s–1	7.79 × 10–10 ± 2.79 × 10–11	7.79 × 10–10 ± 2.79 × 10–11	
a, —	–0.36 ± 0.005	–0.36 ± 0.005	
b, —	1.25 ± 0.003	1.25 ± 0.003	
D11, m2·s–1	0.17 × 10–9 ± 6.25 × 10–12	0.17 × 10–9 ± 6.25 × 10–12	
D12, m2·s–1	0.15 × 10–9 ± 1.06 × 10–11	0.15 × 10–9 ± 1.06 × 10–11	
D21, m2·s–1	0.08 × 10–9 ± 9.64 × 10–12	0.08 × 10–9 ± 9.64 × 10–12	
D22, m2·s–1	0.76 × 10–9 ± 2.90 × 10–11	0.76 × 10–9 ± 2.90 × 10–11	
f(x)	0.01032	0.01032	
a Constraint values refer to the estimated
parameters listed in the following order: D1, D2, a, and b.

As can be seen,
we chose wide constraints. By using this algorithm, it is possible to obtain
the same minimum as that obtained by using PS, which is the lowest
one. The obtained parameters are the same as the ones reported, and
the code is fast running (10 times lower than GA and 2 times lower
than PS). Finally, by increasing the swarm size from 40 to 1000, the
iteration number necessary to achieve the minimum is about 2 times
smaller.

4 Conclusions
In this paper, the influence
of the choice of the minimization
algorithms for the determination of diffusion coefficients, by performing
experiments by the Taylor dispersion technique, has been investigated.
A model system has been chosen to compare the obtained results with
the ones reported in the literature. All collected data have been
submitted to a simultaneous parameter estimation analysis by testing
the different minimization algorithms present in MATLAB R2016a libraries.
For each algorithm, several attempts have been made to verify its
performance, that is, by testing the initial parameter set values
or the population size. We verified that the commonly used algorithms
(TRR and LM) fall into suboptimal local minima, estimating Dij values that are completely
different from the ones reported in the literature. As has been demonstrated
by other authors, global methods, such as GA, PS, and PSW algorithms
are able to find the real objective function minimum. In particular,
for the considered system, PS and PSW algorithms can be considered
the best ones and also in terms of calculation speed. The results
are promising and give an idea that for the chosen three-component
system, the latest two algorithms are surely the best ones. We suggest
the reader to test them when faced with multicomponent diffusion problems
with the Taylor dispersion technique. Therefore, a wider investigation
on a bigger number of physical systems is needed to claim that PS
and PSW algorithms are the best ones until now. Finally, it is possible
to conclude that the results of the present work are certainly a guide
for researchers interested in determining diffusivity coefficients
from experiments by the Taylor dispersion technique.

Annex—Derivation of the RI detector signal
function
As it is difficult in practice to measure the concentration
of
each component of the solution along time, it is possible to record
the RI profile through dedicated detectors. This profile is correlated
with concentration in eq 1.4 A.1  Here, R1 = ∂n/∂C1 and R2 = ∂n/∂C2 are the molar refractivities of the two solutes
evaluated
at the carrier stream average compositions C̅1 and C̅2. Thus, by
using the signal definition reported in eq A.2, it is possible to arrange eq A.1 as reported in eqs A.3 and A.4. A.2  Where B0 and B1 are baseline
correction parameters that can
be easily obtained by the linear fit of the experimental baseline
and k is an instrument constant. A.3   A.4  

Equation A.3 is
in practice the sum of two peak functions. Here, Smax is the maximum of the collected signal value that
can be directly obtained from the experimental data profile. α1 is the fraction of the initial refractive index contributed
by solute 1, and it is defined in eq A.5. A.5  

The molar refractivities of the two solutes are difficult
to be
measured separately. It can be used to perform two different measurements
at α1 = 0 and 1, at a fixed stream average concentration.
In this way, by integrating the resulting peak area (A1 and A2), it is possible
to obtain the molar refractivities by using the following approximation
with good results: R1 = A1/ΔC1 and R2 = A2/ΔC2. Furthermore, D1 and D2 represent the eigenvalues of the function,
whereas W1 is the weight of the first
peak function. As can be seen, the eigenvalues are weighted through
a linear correlation, and a and b are the related parameters.

Supporting Information Available
The Supporting Information is
available free of charge on the ACS Publications website at DOI: 10.1021/acsomega.7b00384.Output obtained
by performing parameter estimation analysis
with the different MATLAB minimization algorithms (PDF)

List of the performed experiments
with the related experimental
condition details (PDF)



Supplementary Material
ao7b00384_si_001.pdf

 ao7b00384_si_002.pdf

 The authors
declare no competing financial interest.

Acknowledgments
Dr. Donato Ciccarelli is acknowledged for
his indispensable
help in installing, taking care of the maintenance of the experimental
apparatus, and in the execution of the laboratory activity.

List of Symbols
aeigenvalues weight
parameter

Aiarea of a signal peak, mV·s

Aikeigenvalues weight

beigenvalues weight parameter

B0baseline correction constant, mV

B1baseline correction
constant, mV·s–1

Ciconcentration of i component, mol·m–3

C̅iaverage stream concentration
of i component, mol·m–3

Diimain diffusion coefficient of component i, m2·s–1

Dijcross diffusion coefficient of component i under the j concentration gradient, m2·s–1

Dkeigenvalues
(k = 1,2), m2·s–1

DZaxial dispersion coefficient, m2·s–1

f(x)objective function

GAgenetic algorithm

kdetector constant, mV

LMLevenberg–Marquardt algorithm

nrefractive index

n̅average stream refractive index

N.Datanumber of collected experimental data

PCGpreconditioned conjugate
gradients

PSpattern
search algorithm

PSWparticle swarm algorithm

Rpipe inner radius, m

rpipe radial coordinate,
m

Rimolar refractivities, m3·mol–1

Sdetector signal, mV

Scalccalculated detector signal, mV

Sexpexperimental detector
signal, mV

Smaxmaximum of the detector signal, mV

ttime,
s

tRretention time, s

TRRtrust-region-reflective algorithm

ufluid velocity, m·s–1

W1eigenvalues
weight

Zpipe length, m

zpipe axial coordinate, m

Greek symbols
α1fraction of the
initial refractive index

ΔCiconcentration
difference of component i, mol·m–3, between the stream and the pulse
==== Refs
References
Taylor G. 
Dispersion
of soluble matter in solvent flowing slowly through a tube . Proc. R. Soc. London, Ser. A 
1953 , 219 , 186 –203 . 10.1098/rspa.1953.0139 .
Alizadeh A. ; Nieto de Castro C. A. ; Wakeham W. A. 
The Theory of the Taylor Dispersion
Technique for Liquid Diffusivity Measurements . Int. J. Thermophys. 
1980 , 1 , 243 –284 . 10.1007/bf00517126 .
Price W. E. 
Theory
of the Taylor Dispersion Technique for Three-component-system Diffusion
Measurements . J. Chem. Soc., Faraday Trans.
1 
1988 , 84 , 2431 –2439 . 10.1039/f19888402431 .
Deng Z. ; Leaist D. G. 
Ternary mutual diffusion
coefficients of MgCl2 + MgSO4 + H2O and Na2SO4 + MgSO4 + H2O from Taylor dispersion profiles . Can. J.
Chem. 
1991 , 69 , 1548 –1553 . 10.1139/v91-229 .
Grossmann T. ; Winkelmann J. 
Ternary Diffusion
Coefficients of Glycerol + Acetone
+ Water by Taylor Dispersion Measurements at 295.15 K . J. Chem. Eng. Data 
2005 , 50 , 1396 –1403 . 10.1021/je050082c .
Leaist D. G. 
Ternary
Diffusion Coefficients of 18-Crown-6 Ether–KCl–Water
by Direct Least-squares Analysis of Taylor Dispersion Measurements . J. Chem. Soc., Faraday Trans. 
1991 , 87 , 597 –601 . 10.1039/ft9918700597 .
van
de Ven-Lucassen I. M. J. J. ; Kerkhof P. J. A. M. 
Diffusion
Coefficients of Ternary Mixtures of Water, Glucose, and Dilute Ethanol,
Methanol, or Acetone by the Taylor Dispersion Method . J. Chem. Eng. Data 
1999 , 44 , 93 –97 . 10.1021/je9801866 .
Chen L. ; Leaist D. G. 
Multicomponent Taylor
Dispersion Coefficients . J. Solution Chem. 
2014 , 43 , 2224 –2237 . 10.1007/s10953-014-0268-y .
Leaist D. G. ; Lyons P. A. 
Electrolyte Diffusion
in Multicomponent Solutions . J. Phys. Chem. 
1962 , 86 , 564 –571 . 10.1021/j100393a029 .
Zaman H. ; Bright A. G. ; Adams K. ; Goodall D. M. ; Forbes R. T. 
Characterisation
of aggregates of cyclodextrin-drug complexes using Taylor Dispersion
Analysis . Int. J. Pharm. 
2017 , 522 , 98 –109 . 10.1016/j.ijpharm.2017.02.012 .28185958 
Barros M. C. F. ; Ramos M. L. ; Burrows H. D. ; Esteso M. A. ; Leaist D. G. ; Prazeres P. A. M. ; Ribeiro A. C. F. 
Effect of 2-Hydroxypropyl-β-cyclodextrin
on the diffusion behavior of L-dopa in aqueous solutions . J. Chem. Thermodyn. 
2016 , 97 , 122 –126 . 10.1016/j.jct.2016.01.010 .
Santos C. I. A. V. ; Shevtsova V. ; Ribeiro A. C. F. 
Isothermal molecular diffusion in
mixtures containing toluene, cyclohexane and methanol . Eur. Phys. J. E: Soft Matter Biol. Phys. 
2017 , 40 , 1 –6 . 10.1140/epje/i2017-11526-4 .
Floudas C. A. ; Gounaris C. E. 
A review of recent advances in global
optimization . J. Global Optim. 
2009 , 45 , 3 –38 . 10.1007/s10898-008-9332-8 .
Esposito W. R. ; Floudas C. A. 
Global Optimization for the Parameter
Estimation of
Differential-Algebraic Systems . Ind. Eng. Chem.
Res. 
2000 , 39 , 1291 –1310 . 10.1021/ie990486w .
Lin Y. ; Stadtherr M. A. 
Deterministic
Global Optimization for Parameter Estimation
of Dynamic Systems . Ind. Eng. Chem. Res. 
2006 , 45 , 8438 –8448 . 10.1021/ie0513907 .
Floudas C. A. ; Akrotirianakis I. G. ; Caratzoulas S. ; Meyer C. A. ; Kallrath J. 
Global optimization
in the 21st century: Advances and challenges . Comput. Chem. Eng. 
2005 , 29 , 1185 –1202 . 10.1016/j.compchemeng.2005.02.006 .
Mitsos A. ; Bollas G. M. ; Barton P. I. 
Bilevel
optimization formulation
for parameter estimation in liquid–liquid phase equilibrium
problems . Chem. Eng. Sci. 
2009 , 64 , 548 –559 . 10.1016/j.ces.2008.09.034 .
Singer A. B. ; Taylor J. W. ; Barton P. I. ; Green W. H. 
Global
Dynamic Optimization
for Parameter Estimation in Chemical Kinetics . J. Phys. Chem. A 
2006 , 110 , 971 –976 . 10.1021/jp0548873 .16419997 
Dutta S.  Optimization in Chemical
Engineering ; Cambridge University Press , 2016 .
Lima D. F.
B. ; dos Santos L. F. ; Pereira D. B. ; Lenzi M. K. ; Corazza M. L. ; Voll F. A. P. 
Liquid-liquid
Equilibrium in Systems
Containing Olive Oil, Free Fatty Acids, Ethanol and Water . Open Chem. Eng. J. 
2016 , 10 , 10 –17 . 10.2174/1874123101610010010 .
Leaist D. G. ; MacEwan K. 
Coupled Diffusion of
Mixed Ionic Micelles in Aqueous
Sodium Dodecyl Sulfate + Sodium Octanoate Solutions . J. Phys. Chem. B 
2001 , 105 , 690 –695 . 10.1021/jp003131v .
Coleman T. F. ; Li Y. 
An Interior, Trust
Region Approach for Nonlinear Minimization Subject
to Bounds . SIAM J. Optim. 
1996 , 6 , 418 –445 . 10.1137/0806023 .
Coleman T. F. ; Li Y. 
On the Convergence of Interior-Reflective Newton Methods for Large-Scale
Nonlinear Minimization Subject to Bounds . Math.
Program. 
1994 , 67 , 189 –224 . 10.1007/bf01582221 .
MATLAB
R2016a help  . http://it.mathworks.com/help/relnotes/index.html (accessed Jun 30, 2016 ).
Levenberg K. 
A method for
the solution of certain non-linear problems in least squares . Q. Appl. Math. 
1944 , 2 , 164 –168 . 10.1090/qam/10666 .
Marquardt D. W. 
An Algorithm
for Least-squares Estimation of Nonlinear Parameters . SIAM J. Appl. Math. 
1963 , 11 , 431 –441 . 10.1137/0111030 .
Moré J. J.  The Levenberg-Marquardt Algorithm: Implementation
and Theory . In Numerical Analysis ; Watson G. A.  , Ed.; Lecture Notes
in Mathematics 630 ; Springer Verlag , 1977 ; pp 105 –116 .
Audet C. ; Dennis J. E. Jr.
Analysis of Generalized Pattern Searches . SIAM
J. Optim. 
2003 , 13 , 889 –903 . 10.1137/s1052623400378742 .
Goldberg D. E.  Genetic Algorithms
in Search, Optimization & Machine Learning . Addison-Wesley , 1989 .

